#include "corne.h"

// Properties
&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&lt {
        quick-tap-ms = <QUICK_TAPPING_TERM>;
};

/ {

  combos {
    #include "combos.dtsi"
  };

  behaviors {
		MORPH(TIcolon, DK_COLN, DK_SCOLN, MOD_LSFT)
		MORPH(bspc, BACKSPACE, DELETE, MOD_LSFT)
		MORPH(TIdot, DOT, DK_AMPR, MOD_LSFT)
		MORPH(TIslsh, DK_SLSH, DK_ASTR, MOD_LSFT)
		MORPH(TIdquot, DK_DQT, DK_QUES, MOD_LSFT)
		MORPH(TIqout, DK_SQT, EXCL, MOD_LSFT)
		MORPH(TIcomma, COMMA, DK_BAR, MOD_LSFT)
		MORPH(eql, DK_EQL, LG(N0), MOD_LGUI)
		MORPH(dot, DOT, DK_PLUS, MOD_LSFT)
		lhm: left_hand_positional_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "LEFT_POSITIONAL_HOLD_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <TAPPING_TERM>;                 // <---[[produces tap if held longer than tapping-term-ms]]
			quick-tap-ms = <QUICK_TAPPING_TERM>;
			global-quick-tab;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = RIGHT_POSITIONS;    // <---[[right-hand keys]]
		};
		rhm: right_hand_positional_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "RIGHT_POSITIONAL_HOLD_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <TAPPING_TERM>;                 // <---[[produces tap if held longer than tapping-term-ms]]
			quick-tap-ms = <QUICK_TAPPING_TERM>;
			global-quick-tab;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = LEFT_POSITIONS;    // <---[[right-hand keys]]
		};
	};

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      label = "BASE";
      bindings = <
        // ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
            &kp DK_PLUS  &kp X       &kp C       &kp L       &kp D       &kp B           &kp DK_MINS &TIdot      &kp J      &TIdquot    &TIqout    &kp DK_BSLSH
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
            &eql         &lhm LALT R &lhm LGUI S &lhm LCTL N &lhm LSFT T &kp G           &TIcomma    &rhm LSFT A &rhm LCTL E &rhm LGUI I &rhm LALT H &TIslsh
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp DK_LT    &kp W       &kp F       &kp M       &kp P       &kp V           &TIcolon    &kp U       &kp O       &kp Y       &kp K       &kp DK_GT
        // ╰───────────┴───────────┴───────────┴───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────┴───────────╯
                                                 &kp ESC    &lt NAV SPC  &kp TAB     &lt SYM ENTER &lt NUM BSPC &kp DEL
        //                                     ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
      >;
    };

    nav_layer {
      label = "NAV";
      bindings = <
        // ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
             XXX         XXX         XXX         XXX         XXX         XXX             &kp UC_CUT  &kp UC_CPY  &kp UC_PST  &kp UC_UND  &kp UC_RDO  XXX
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX         &kp LALT    &kp LCMD    &kp LCTL    &kp LSHFT   XXX             &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &caps_word  XXX
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX         &to NAV     XXX         XXX         XXX         XXX             &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &kp INS     XXX
        // ╰───────────┴───────────┴───────────┴───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────┴───────────╯
                                                 &kp ESC     &to BASE    &kp TAB         &kp ENTER   &kp BSPC   &kp DEL
        //                                     ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
      >;
    };

    num_layer {
      label = "NUM";
      bindings = <
        // ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
             XXX         &kp DK_LBRC &kp N6      &kp N5      &kp N4      &kp DK_RBRC      XXX         XXX         XXX         XXX         XXX         XXX
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX         &kp DK_LPRN &kp N3      &kp N2      &kp N1      &kp DK_RPRN      &kp SPACE   &kp LSHFT   &kp LCTL    &kp LCMD    &kp LALT    &kp BSPC
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX         &kp DK_LBKT &kp N9      &kp N8      &kp N7      &kp DK_RBKT      &kp ENTER   XXX         XXX         XXX         &to NUM     XXX
        // ╰───────────┴───────────┴───────────┴───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────┴───────────╯
                                                 &dot        &kp N0      &kp DK_MINS     &kp ENTER   &to BASE   &kp DEL
        //                                     ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
      >;
    };


    sym_layer {
      label = "SYM";
      bindings = <
        // ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
             XXX        &kp DK_LBRC  &kp DK_CIRC &kp PRCNT   &kp DK_DLLR &kp DK_RBRC     XXX         XXX         XXX         XXX         XXX         XXX
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX        &kp DK_LPRN  &kp HASH    &kp DK_AT   &kp EXCL    &kp DK_RPRN     XXX         &kp LSHFT   &kp LCTL    &kp LCMD    &kp LALT    XXX
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX        &kp DK_LBKT  &kp DK_LT   &kp DK_ASTR &kp DK_AMPR &kp DK_RBKT     XXX         XXX         XXX         XXX         &to SYM     XXX
        // ╰───────────┴───────────┴───────────┼───────────┼───────────┤───────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────┴───────────╯
                                                 &kp ESC     &kp SPC     &lt SET TAB     &to BASE   &kp BSPC   &kp DEL
        //                                     ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
      >;
    };

    set_layer {
      label = "SET";
      bindings = <
        // ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
             XXX         XXX         XXX         XXX         XXX         XXX           &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 XXX
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX         XXX         XXX         XXX         XXX         XXX             XXX         XXX         XXX         XXX         XXX         XXX
        // ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
             XXX         XXX         XXX         XXX         XXX         XXX             XXX         XXX         XXX         XXX         XXX         &bt BT_CLR
        // ╰───────────┴───────────┴───────────┼───────────┼───────────┤───────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────┴───────────╯
                                                 XXX         XXX         &to BASE        XXX         XXX         XXX
        //                                     ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
      >;
    };

  };
};
